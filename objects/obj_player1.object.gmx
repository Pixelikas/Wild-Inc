<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ph_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debugmode = false

speed_multiplier = 1;
pl_animation = 0;
pl_direction = 0;
pl_xspeed = 0;
pl_yspeed = 0;
pl_jumping = false;
pl_falling = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation Control
if(pl_falling){
        pl_animation = anim.falling;
    }else{
        if(pl_jumping){
            pl_animation = anim.jumping;
        }else{
                if(pl_xspeed == 0 &amp;&amp; pl_animation != anim.win &amp;&amp; pl_animation != anim.lose){pl_animation = anim.idle}
                if(pl_xspeed == PLAYERSPEED || pl_xspeed == -PLAYERSPEED){pl_animation = anim.walking}
                if(pl_xspeed == PLAYERSPEED*2 || pl_xspeed == -PLAYERSPEED*2){pl_animation = anim.running}
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Control

if(pl_direction == 1){//right
image_xscale = -1;
}else if(pl_direction == 0){//left
image_xscale = 1;
}else{//shit happens
draw_text(0,0,"valor de pl_direction Ã© invalido")//debug message
}

if(pl_animation == anim.idle &amp;&amp; (global.player1item1 != 0 || global.player1item2 !=0)){pl_animation = anim.item}
if(pl_animation == anim.walking &amp;&amp; (global.player1item1 != 0 || global.player1item2 !=0)){pl_animation = anim.itemwalking}


//check for right animation
if(global.player1char == char.bunny){//hefner
    if(pl_animation == anim.idle){
    sprite_index = spr_HefnerIdle;
    image_speed = 1/8
    }
    if(pl_animation == anim.walking){
    sprite_index = spr_HefnerWalking;
    image_speed = 1/4
    }
    if(pl_animation == anim.running){
    sprite_index = spr_HefnerWalking;
    image_speed = 1/2
    }
    if(pl_animation == anim.jumping){
    sprite_index = spr_HefnerJumping;
    image_speed = 1/8
    }
    if(pl_animation == anim.falling){
    sprite_index = spr_HefnerFalling;
    image_speed = 1/4
    }   
    if(pl_animation == anim.item){
    sprite_index = spr_HefnerItemIdle;
    image_speed = 1/8
    }
    if(pl_animation == anim.itemwalking){
    sprite_index = spr_HefnerItemWalking;
    image_speed = 1/8
    }
    if(pl_animation == anim.win){
    sprite_index = spr_HefnerWin;
    image_speed = 1/8
    }
    if(pl_animation == anim.lose){
    sprite_index = spr_HefnerLose;
    image_speed = 1/8
    }
}

if(global.player1char == char.squirel){//Noah
    if(pl_animation == anim.idle){
    sprite_index = spr_NoahIdle;
    image_speed = 1/8
    }
    if(pl_animation == anim.walking){
    sprite_index = spr_NoahWalking;
    image_speed = 1/4
    }
    if(pl_animation == anim.running){
    sprite_index = spr_NoahWalking;
    image_speed = 1/2
    }
    if(pl_animation == anim.jumping){
    sprite_index = spr_NoahJumping;
    image_speed = 1/8
    }
    if(pl_animation == anim.falling){
    sprite_index = spr_NoahFalling;
    image_speed = 1/4
    }   
    if(pl_animation == anim.item){
    sprite_index = spr_NoahItemIdle;
    image_speed = 1/8
    }
    if(pl_animation == anim.itemwalking){
    sprite_index = spr_NoahItemWalking;
    image_speed = 1/8
    }
    if(pl_animation == anim.win){
    sprite_index = spr_NoahWin;
    image_speed = 1/8
    }
    if(pl_animation == anim.lose){
    sprite_index = spr_NoahLose;
    image_speed = 1/8
    }
}

if(global.player1char == char.bear){//Olga
    if(pl_animation == anim.idle){
    sprite_index = spr_OlgaIdle;
    image_speed = 1/8
    }
    if(pl_animation == anim.walking){
    sprite_index = spr_OlgaWalking;
    image_speed = 1/4
    }
    if(pl_animation == anim.running){
    sprite_index = spr_OlgaWalking;
    image_speed = 1/2
    }
//    if(pl_animation == anim.jumping){
//    sprite_index = spr_OlgaJumping;
//    image_speed = 1/8
//    }
//    if(pl_animation == anim.falling){
//    sprite_index = spr_OlgaFalling;
//   image_speed = 1/4
//    }   
    if(pl_animation == anim.item){
    sprite_index = spr_OlgaItemIdle;
    image_speed = 1/8
    }
    if(pl_animation == anim.itemwalking){
    sprite_index = spr_OlgaItemWalking;
    image_speed = 1/8
    }
    if(pl_animation == anim.win){
    sprite_index = spr_OlgaWin;
    image_speed = 1/8
    }
    if(pl_animation == anim.lose){
    sprite_index = spr_OlgaLose;
    image_speed = 1/8
    }
}

if(global.player1char == char.quati){//Kaua
    if(pl_animation == anim.idle){
    sprite_index = spr_KauaIdle;
    image_speed = 1/8
    }
    if(pl_animation == anim.walking){
    sprite_index = spr_KauaWalking;
    image_speed = 1/4
    }
    if(pl_animation == anim.running){
    sprite_index = spr_KauaWalking;
    image_speed = 1/2
    }
    if(pl_animation == anim.jumping){
    sprite_index = spr_KauaJumping;
    image_speed = 1/8
    }
    if(pl_animation == anim.falling){
    sprite_index = spr_KauaFalling;
    image_speed = 1/4
    }   
    if(pl_animation == anim.item){
    sprite_index = spr_KauaItemIdle;
    image_speed = 1/8
    }
    if(pl_animation == anim.itemwalking){
    sprite_index = spr_KauaItemWalking;
    image_speed = 1/8
    }
    if(pl_animation == anim.win){
    sprite_index = spr_KauaWin;
    image_speed = 1/8
    }
    if(pl_animation == anim.lose){
    sprite_index = spr_KauaLose;
    image_speed = 1/8
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Control
if(!place_meeting(x+(pl_xspeed*speed_multiplier),y,par_wall)){
    if(global.player2char == char.bear){
        if(!place_meeting(x+(pl_xspeed*speed_multiplier),y,obj_player2)){
        x+=(pl_xspeed*speed_multiplier);
        }
    }else{
    x+=pl_xspeed*speed_multiplier;
    }

}
if(!place_meeting(x,y+pl_yspeed,par_wall)){
y+=pl_yspeed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Skills
if(global.player1char == char.bunny){ speed_multiplier = 1.5}//da velocidade pro coelho

if(place_meeting(x,y,obj_fabricap1)){
    if(global.player1item1 == item.none){
        global.player1item1 = obj_fabricap1.item//pega item na fabrica
    }else if(global.player1item2 == item.none &amp;&amp; global.player1char == char.squirel){
        global.player1item2 = obj_fabricap1.item//da item extra pro esquilo
    }
}
if(place_meeting(x,y,obj_player2) &amp;&amp; global.player1char == char.quati){//script de roubo do quati
    if(global.player1item1 == item.none &amp;&amp; global.player2item1 != item.none){
        global.player1item1 = global.player2item1;
        global.player2item1 = item.none;
    }else if(global.player1item1 == item.none &amp;&amp; global.player2item2 != item.none){
        global.player1item1 = global.player2item2;
        global.player2item2 = item.none;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls Setup
pl_xspeed = 0;
pl_yspeed = 0;

if(!global.gameover){
if(keyboard_check(ord('D'))){//mover para a direita
pl_xspeed = PLAYERSPEED;
pl_direction = 1;
}
if(keyboard_check(ord('A'))){//mover para a esquerda
pl_xspeed = -PLAYERSPEED;
pl_direction = 0;
}
if(keyboard_check_pressed(ord('W')) &amp;&amp; !pl_jumping &amp;&amp; !pl_falling &amp;&amp; global.player1char != char.bear){//verificaÃ§ao para dar o pulo
pl_jumping = true;
audio_play_sound(snd_Jump,1,false)
yold = y;

}
if(keyboard_check_pressed(ord('S'))){//colocar item no tabuleiro
    if(global.player1item1 != item.none){//item 1
        p = (x-128)/32;
        if(p&gt;=6){p=5 }; if(p&lt;0){p=0}
        if(ds_grid_get(obj_tabuleiro.var_tabuleiro,p,0,) == item.none){
            ds_grid_set(obj_tabuleiro.var_tabuleiro,p,0,global.player1item1)
            global.player1item1 = item.none;
            global.playerturn = 1;
            audio_play_sound(snd_ItemPlacement,1,false)
        }else{
            //ERROUUUUUUUU
            audio_play_sound(snd_ItemError,1,false)
        }
    }else if (global.player1item2 != item.none){//item 2(quati)
        p = (x-128)/32;
        if(p&gt;=6){p=5}; if(p&lt;0){p=0}
        if(ds_grid_get(obj_tabuleiro.var_tabuleiro,p,0,) == item.none){
            ds_grid_set(obj_tabuleiro.var_tabuleiro,p,0,global.player1item2)
            global.player1item2 = item.none;
            global.playerturn = 1;
            audio_play_sound(snd_ItemPlacement,1,false)
        }else{
            //ERROUUUUUUUU
            audio_play_sound(snd_ItemError,1,false)
        }
    }
}

if(!place_meeting(x,y+(PLAYERSPEED*2),par_wall) &amp;&amp; !pl_jumping){//verificaÃ§ao para parar a queda
pl_yspeed = PLAYERSPEED*2;
pl_falling = true;
}else{pl_falling = false;}


if(pl_jumping){//verificaÃ§ao para parar o pulo
pl_yspeed = -PLAYERSPEED*2;
if(y &lt;= yold-64){pl_jumping = false}//quando parar o pulo
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
